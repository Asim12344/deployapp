{"version":3,"sources":["components/TodoItem.js","components/TodoForm.js","index.js"],"names":["TodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","renderForm","bind","assertThisInitialized","renderItem","toggleState","updateItem","setState","evt","preventDefault","editTask","index","input","value","_this2","react_default","a","createElement","className","type","checked","details","completed","onChange","clickHandler","style","fontStyle","color","textDecoration","onDoubleClick","name","onClick","stopPropagation","deleteTask","_this3","onSubmit","ref","defaultValue","React","Component","TodoForm","addTask","class","placeholder","currentTask","updateTask","TodoList","changeStatus","tasks","console","log","splice","push","newValue","target","prevState","map","task","components_TodoForm","components_TodoItem","key","ReactDOM","render","src_TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.7aa4daf9.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass TodoItem extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isEditing:false\n    }\n\n    this.renderForm = this.renderForm.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n    this.toggleState = this.toggleState.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n  }\n  \n  toggleState(){\n    const { isEditing } = this.state;\n    this.setState({\n      isEditing:!isEditing\n    })\n  }\n\n  updateItem(evt){\n    evt.preventDefault();\n    this.props.editTask(this.props.index, this.input.value);\n    this.toggleState();\n  }\n\n  \n\n\n  renderItem(){\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#cdcdcd\",\n        textDecoration: \"line-through\"\n    }\n    \n    return (\n        \n        \n\n\n      <li className=\"todo-item\">\n      <input \n            type=\"checkbox\" \n            checked={this.props.details.completed} \n            onChange={() => this.props.clickHandler(this.props.details.index)}\n        />\n        <p style={this.props.details.completed ? completedStyle: null} onDoubleClick={this.toggleState}>\n        {this.props.details.name}\n        </p>\n        \n        <button className=\"destroy\" onClick={(evt) => {\n          evt.stopPropagation();\n          this.props.deleteTask(this.props.index)\n        }}/>\n         \n \n        \n \n      </li>    \n      \n    )\n  }\n  renderForm(){\n    return (\n     <form onSubmit={this.updateItem}>\n      <input type=\"text\" ref={(value) => {\n        this.input = value\n      }}  defaultValue={this.props.details.name} />\n      \n    </form>\n    )\n  }\n  render(){\n    const { isEditing } = this.state;\n  return (\n    <section>\n    {\n      isEditing ? this.renderForm() :  this.renderItem()\n    }\n     \n    </section> \n       )\n    }\n}\n\n\n\nexport default TodoItem;\n\n\n","import React from 'react'\n\nconst TodoForm = (props) => {\n\treturn (\n\t\t<form onSubmit={props.addTask}>\n\t\t  <input class=\"new-todo\" placeholder=\"Enter a Task\" type=\"text\" \n\t\t    value={props.currentTask}\n\t\t    onChange={props.updateTask}\n\t\t   />\n\t\t   \t\n\t\t</form>\n\t)\n}\n\n\n\nexport default TodoForm","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport TodoItem from './components/TodoItem.js';\nimport TodoForm from './components/TodoForm.js';\n\nclass TodoList extends React.Component {\n  constructor(){\n    super();\n    this.changeStatus = this.changeStatus.bind(this);\n    this.updateTask = this.updateTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.state = {\n      tasks:[{\n         index: 1, \n        name:\"Buy Milk\",\n        completed:false\n      },\n      {\n        index: 2, \n        name:\"Buy Cheese\",\n        completed:false\n      },\n      {\n        index: 3, \n        name:\"Buy Bread\",\n        completed:false\n      }],\n      currentTask:'' \n    }\n }\ndeleteTask(index){\n  console.log(index)\n\n  let tasks = this.state.tasks;\n  tasks.splice(index,1);\n\n  this.setState({\n    tasks\n  })\n  \n}\naddTask(evt){\n  evt.preventDefault();\n  let tasks = this.state.tasks;\n  let currentTask = this.state.currentTask;\n  \n  tasks.push({\n      \n    name:currentTask,\n    completed:false\n  })\n\n  this.setState({\n     \n    tasks,\n    currentTask:'' \n  })\n\n\n}\nupdateTask(newValue){\n  this.setState({\n    currentTask:newValue.target.value\n  })\n}\n\neditTask(index, newValue){\n var tasks = this.state.tasks;\n var task = tasks[index];\n task['name'] = newValue;\n this.setState({\n  tasks\n })\n}\n\n\nchangeStatus(index){\n /*var tasks = this.state.tasks;\n var task = tasks[index];\n task.completed = !task.completed;\n this.setState({\n   tasks:tasks\n })*/\n\n this.setState(prevState => {\n    const updatedTodos = prevState.tasks.map(task => {\n        if (task.index === index) {\n            task.completed = !task.completed\n        }\n        return task\n    })\n    return {\n        tasks: updatedTodos\n    }\n})\n\n \n}\n\n\n\n\n render() {\n    return (\n      <section>\n\n            <div>\n\t\t\t\t\t<header className=\"todoapp\">\n\t\t\t\t\t\t<h1>todos</h1>\n\t\t\t\t\t\t\n\t\t\t\t\t</header>\n                    \n\t\t\t\t\n\t\t\t</div>\n       <TodoForm \n            currentTask={this.state.currentTask}\n            updateTask={this.updateTask}\n            addTask={this.addTask}\n        />\n        <div className=\"name\">\n        <ul className=\"todo-list\">\n        {\n          this.state.tasks.map((task, index) => {\n            return <TodoItem \n                    key={index} \n                    clickHandler={this.changeStatus} \n                    index={index} \n                    deleteTask={this.deleteTask}\n                    editTask={this.editTask}\n                    details={task}\n                     />\n          })\n        }\n          \n        </ul>\n        </div>\n      </section>\n    )\n  }\n}\n\n\n\nReactDOM.render(<TodoList />,document.getElementById('root'))\n"],"sourceRoot":""}